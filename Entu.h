#pragma once
#ifndef CHIP8
#define CHIP8

#include<iostream>
#include<fstream>

/*
Task to be implemented


*/

using namespace std;

class Entu {
public:
	unsigned char Graphics[64 * 32]; // Graphics
	unsigned char Key[16]; // 0 to F
	bool drawFlag;

	Entu(); //Constructor
	~Entu(); //Destructor
	void cycle();
	bool load(string filename);

private:
	unsigned short Opcode; // Stores the current opcode
	unsigned char Memory[4096]; // Stores the 4K memory
	unsigned char v[16]; // General purpose registers v0 to vE
	unsigned short I; // Index Register
	unsigned short PC; // Program Counter

	unsigned char DelayTimer;
	unsigned char SoundTimer;

	unsigned short Stack[16]; // Stack with 16 Levels
	unsigned short StackPointer;

	unsigned char FontSet[80] =
	{
	  0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	  0x20, 0x60, 0x20, 0x20, 0x70, // 1
	  0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	  0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	  0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	  0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	  0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	  0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	  0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	  0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	  0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	  0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	  0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	  0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	  0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	  0xF0, 0x80, 0xF0, 0x80, 0x80  // F
	};

	//functions
	void initialize(); // Initializes the System

	unsigned short getOpcode(unsigned char, unsigned char);
	unsigned char getX();
	unsigned char getY();
	unsigned char getKK();


};


#endif